#pragma once

#include "ecs/EntityID.hpp"
#include "com/Array.hpp"

///////////////////////////////////////////////////////////

namespace mini::ecs {

///////////////////////////////////////////////////////////

#define TEMPLATE template<typename T, auto N>

///////////////////////////////////////////////////////////

TEMPLATE 
struct ComponentArray
{
    com::Array<T, N> dense;
    ID componentLookup [N];
    ID entityLookup [N];

    auto& Add(ID);
    void Remove(ID);
};

///////////////////////////////////////////////////////////

TEMPLATE 
auto& ComponentArray<T, N>::Add(ID entityID)
{
    return dense.Append();
}

///////////////////////////////////////////////////////////

TEMPLATE 
void ComponentArray<T, N>::Remove(ID entityID)
{
    
}

///////////////////////////////////////////////////////////

#undef TEMPLATE

///////////////////////////////////////////////////////////

}//ns